{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suraj\\\\Downloads\\\\calendarApp\\\\calendar-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport DeleteModal from \"./components/DeleteModal\"; // ✅ make sure this path is correct\n// import EditModal from \"./components/EditModal\"; // (optional) if implementing edit\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nfunction App() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/api/events\");\n        setEvents(res.data);\n      } catch (error) {\n        console.error(\"Error fetching events:\", error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  const handleEventSelect = event => {\n    setSelectedEvent(event);\n    setShowDeleteModal(true);\n  };\n  const handleDeleteEvent = async eventId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/events/${eventId}`);\n      setEvents(events.filter(event => event._id !== eventId));\n      setShowDeleteModal(false);\n      setSelectedEvent(null);\n    } catch (error) {\n      console.error(\"Failed to delete event:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"My Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigCalendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 600\n      },\n      onSelectEvent: handleEventSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showDeleteModal && selectedEvent && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      eventTitle: selectedEvent.title,\n      onCancel: () => setShowDeleteModal(false),\n      onConfirm: () => handleDeleteEvent(selectedEvent._id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rx61QHEtAJ8fd1kkvBMJT4ubxso=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","BigCalendar","momentLocalizer","moment","axios","DeleteModal","jsxDEV","_jsxDEV","localizer","App","_s","events","setEvents","selectedEvent","setSelectedEvent","showDeleteModal","setShowDeleteModal","fetchEvents","res","get","data","error","console","handleEventSelect","event","handleDeleteEvent","eventId","delete","filter","_id","style","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","height","onSelectEvent","eventTitle","title","onCancel","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/Suraj/Downloads/calendarApp/calendar-ui/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport DeleteModal from \"./components/DeleteModal\"; // ✅ make sure this path is correct\n// import EditModal from \"./components/EditModal\"; // (optional) if implementing edit\n\nconst localizer = momentLocalizer(moment);\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5000/api/events\");\n        setEvents(res.data);\n      } catch (error) {\n        console.error(\"Error fetching events:\", error);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  const handleEventSelect = (event) => {\n    setSelectedEvent(event);\n    setShowDeleteModal(true);\n  };\n\n  const handleDeleteEvent = async (eventId) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/events/${eventId}`);\n      setEvents(events.filter((event) => event._id !== eventId));\n      setShowDeleteModal(false);\n      setSelectedEvent(null);\n    } catch (error) {\n      console.error(\"Failed to delete event:\", error);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1 style={{ textAlign: \"center\" }}>My Calendar</h1>\n      <BigCalendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 600 }}\n        onSelectEvent={handleEventSelect}\n      />\n\n      {/* Delete Modal */}\n      {showDeleteModal && selectedEvent && (\n        <DeleteModal\n          eventTitle={selectedEvent.title}\n          onCancel={() => setShowDeleteModal(false)}\n          onConfirm={() => handleDeleteEvent(selectedEvent._id)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}