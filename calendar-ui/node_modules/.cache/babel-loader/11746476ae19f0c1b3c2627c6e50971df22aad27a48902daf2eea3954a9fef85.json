{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suraj\\\\Downloads\\\\calendarApp\\\\calendar-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./App.css\";\nimport EventModal from \"./components/EventModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addEvent } from \"./redux/eventSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const events = useSelector(state => state.events.events);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [allEvents, setEvents] = useState([]);\n\n  // for delete model \n\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  // ✅ Fetch events from backend\n  useEffect(() => {\n    fetch(\"http://localhost:5000/events\").then(res => res.json()).then(data => setEvents(data)).catch(err => console.error(\"Failed to fetch events\", err));\n  }, []);\n\n  // ✅ Save new event to backend and Redux\n  const handleAddEvent = event => {\n    fetch(\"http://localhost:5000/events\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(event)\n    }).then(res => res.json()).then(data => {\n      dispatch(addEvent(data));\n      setEvents(prev => [...prev, data]);\n      setShowModal(false);\n    }).catch(err => console.error(\"Failed to save event\", err));\n  };\n\n  // ✅ Handle time slot selection\n  const handleSelectSlot = slotInfo => {\n    setSelectedSlot(slotInfo);\n    setShowModal(true);\n  };\n\n  // ✅ Handle event deletion\n  const handleEventSelect = event => {\n    if (window.confirm(`Delete event: \"${event.title}\"?`)) {\n      fetch(`http://localhost:5000/events/${event._id}`, {\n        method: \"DELETE\"\n      }).then(res => res.json()).then(() => {\n        setEvents(prev => prev.filter(e => e._id !== event._id));\n      }).catch(err => console.error(\"Delete error:\", err));\n    }\n  };\n\n  // ✅ Category-based colors\n  const eventStyleGetter = event => {\n    const categoryColors = {\n      exercise: \"#4CAF50\",\n      eating: \"#FF9800\",\n      work: \"#2196F3\",\n      relax: \"#9C27B0\",\n      family: \"#E91E63\",\n      social: \"#FF5722\"\n    };\n    return {\n      style: {\n        backgroundColor: categoryColors[event.category] || \"#607D8B\",\n        borderRadius: \"5px\",\n        color: \"white\",\n        padding: \"4px\"\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-center my-4\",\n      children: \"My Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigCalendar, {\n      localizer: localizer,\n      events: allEvents,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      selectable: true,\n      style: {\n        height: 600\n      },\n      onSelectSlot: handleSelectSlot,\n      onSelectEvent: handleEventSelect,\n      eventPropGetter: eventStyleGetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(EventModal, {\n      onClose: () => setShowModal(false),\n      onSave: handleAddEvent,\n      slotInfo: selectedSlot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1LPNehdYuAUvNUXTC0zDqO2hBCo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","BigCalendar","momentLocalizer","moment","EventModal","useDispatch","useSelector","addEvent","jsxDEV","_jsxDEV","localizer","App","_s","dispatch","events","state","showModal","setShowModal","selectedSlot","setSelectedSlot","allEvents","setEvents","selectedEvent","setSelectedEvent","showDeleteModal","setShowDeleteModal","fetch","then","res","json","data","catch","err","console","error","handleAddEvent","event","method","headers","body","JSON","stringify","prev","handleSelectSlot","slotInfo","handleEventSelect","window","confirm","title","_id","filter","e","eventStyleGetter","categoryColors","exercise","eating","work","relax","family","social","style","backgroundColor","category","borderRadius","color","padding","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","selectable","height","onSelectSlot","onSelectEvent","eventPropGetter","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/Users/Suraj/Downloads/calendarApp/calendar-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./App.css\";\n\nimport EventModal from \"./components/EventModal\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addEvent } from \"./redux/eventSlice\";\n\nconst localizer = momentLocalizer(moment);\n\nfunction App() {\n  const dispatch = useDispatch();\n  const events = useSelector((state) => state.events.events);\n\n  const [showModal, setShowModal] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [allEvents, setEvents] = useState([]);\n\n  // for delete model \n\n  const [selectedEvent, setSelectedEvent] = useState(null);\nconst [showDeleteModal, setShowDeleteModal] = useState(false);\n\n\n  // ✅ Fetch events from backend\n  useEffect(() => {\n    fetch(\"http://localhost:5000/events\")\n      .then((res) => res.json())\n      .then((data) => setEvents(data))\n      .catch((err) => console.error(\"Failed to fetch events\", err));\n  }, []);\n\n  // ✅ Save new event to backend and Redux\n  const handleAddEvent = (event) => {\n    fetch(\"http://localhost:5000/events\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(event),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch(addEvent(data));\n        setEvents((prev) => [...prev, data]);\n        setShowModal(false);\n      })\n      .catch((err) => console.error(\"Failed to save event\", err));\n  };\n\n  // ✅ Handle time slot selection\n  const handleSelectSlot = (slotInfo) => {\n    setSelectedSlot(slotInfo);\n    setShowModal(true);\n  };\n\n  // ✅ Handle event deletion\n  const handleEventSelect = (event) => {\n    if (window.confirm(`Delete event: \"${event.title}\"?`)) {\n      fetch(`http://localhost:5000/events/${event._id}`, {\n        method: \"DELETE\",\n      })\n        .then((res) => res.json())\n        .then(() => {\n          setEvents((prev) => prev.filter((e) => e._id !== event._id));\n        })\n        .catch((err) => console.error(\"Delete error:\", err));\n    }\n  };\n\n  // ✅ Category-based colors\n  const eventStyleGetter = (event) => {\n    const categoryColors = {\n      exercise: \"#4CAF50\",\n      eating: \"#FF9800\",\n      work: \"#2196F3\",\n      relax: \"#9C27B0\",\n      family: \"#E91E63\",\n      social: \"#FF5722\",\n    };\n    return {\n      style: {\n        backgroundColor: categoryColors[event.category] || \"#607D8B\",\n        borderRadius: \"5px\",\n        color: \"white\",\n        padding: \"4px\",\n      },\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-2xl font-bold text-center my-4\">My Calendar</h1>\n      <BigCalendar\n        localizer={localizer}\n        events={allEvents}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        selectable\n        style={{ height: 600 }}\n        onSelectSlot={handleSelectSlot}\n        onSelectEvent={handleEventSelect}\n        eventPropGetter={eventStyleGetter}\n      />\n      {showModal && (\n        <EventModal\n          onClose={() => setShowModal(false)}\n          onSave={handleAddEvent}\n          slotInfo={selectedSlot}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}